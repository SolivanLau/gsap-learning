@use "sass:map";
@use "sass:string";
@use "../abstracts" as *;

:root {
    // COLORS: map from ./abstracts/_colors
    @each $color, $shades in $colors {
        @each $shade, $value in $shades {
            --clr-#{$color}-#{$shade}: #{$value};
        }
    }

    --clr-box-shadow: 0 10px 24px -8px color-mix(in oklab, var(--clr-indigo-700) 80%, transparent);
    // BORDER
    --bdr-radius: #{rem(12)};
    // UI
    --clr-bg: var(--clr-stone-950);
    --clr-title: var(--clr-neutral-50);
    --clr-btn: var(--clr-neutral-50);
    --clr-text: color-mix(in oklab, var(--clr-neutral-50) 70%, transparent);

    // FONTS: map from ./abstracts/_fonts
    @each $size, $breakpoints in $font-sizes {
        // Mobile and Desktop variables --fs-mobile-xs, --fs-desktop-body
        @each $breakpoint, $value in $breakpoints {
            --fs-#{$breakpoint}-#{$size}: #{$value};
        }

        // Fluid variables
        $min-viewport: 400;
        $max-viewport: 1000;

        $mobile-size: map.get($font-sizes, $size, "mobile");
        $desktop-size: map.get($font-sizes, $size, "desktop");
        --fs-fluid-#{$size}: #{clamp-calc(
                $mobile-size,
                $desktop-size,
                $min-viewport,
                $max-viewport
            )};
    }

    // SPACING: map from ./abstracts/_spaces
    // SYNTAX: --spc-xl, --spc-md
    @each $space, $value in $spaces {
        // @debug $value;
        --spc-#{$space}: #{$value};
    }
}
