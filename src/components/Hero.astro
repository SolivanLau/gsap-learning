---
import type { HTMLAttributes } from "astro/types";
import TextSplit from "@components/animations/TextSplit.astro";
import Link from "@components/Link.astro";
// ICONS
import Rocket from "@assets/icons/Rocket.astro";
import Cloud from "@assets/icons/Cloud.astro";

type Props = HTMLAttributes<"header">;
const { class: className, ...rest } = Astro.props;
---

<header class:list={["hero", className]} {...rest}>
    <div class="wrapper">
        <div class="hero__text">
            <h1>
                <TextSplit
                    text="LEARNING"
                    as="div"
                    class="fs-fluid-h6 hero__subtitle"
                    letterClass="letter--learning"
                    letterSpacing={10}
                />
                <div class="hero__title fs-fluid-display">GSAP</div>
            </h1>
            <p>Learning resources and example projects for GSAP</p>
            <div class="hero__cta section section__padding--sm section__padding--top">
                <Link href="/getting-started" preset="btn--secondary">Start Learning</Link>
                <Link href="/basics" preset="btn--primary">See Projects</Link>
            </div>
        </div>
    </div>
    <!-- ANIMATED BG -->
    <div class="hero__bg">
        <div class="hero__bg--animation-container">
            <Rocket size={"100%"} class="hero__image hero__rocket" />
            <Cloud size={"100%"} class="hero__image hero__cloud" />
            <Cloud size={"100%"} class="hero__image hero__cloud hero__cloud--2" />
        </div>
    </div>
</header>

<style lang="scss">
    @use "../styles/abstracts" as *;

    .hero {
        // outline: 1px solid green;
        position: relative;
        overflow-x: hidden;
    }

    .hero__text {
        --_min-height: 30vh;
        min-height: var(--_min-height);
        display: grid;
        align-content: center;
        margin-top: 250px;

        @include breakpoint(500) {
            --_min-height: 70vh;
            max-width: 660px;
            margin-top: 0;
        }
    }
    .hero__subtitle {
        font-weight: 400;
    }
    .hero__cta {
        display: flex;
        flex-direction: column;
        gap: var(--spc-md);

        @include breakpoint(500) {
            flex-direction: row;
        }
    }

    // ANIMATED BG
    .hero__bg {
        // outline: 2px solid orangered;
        position: absolute;
        top: 40%;
        right: 0;
        z-index: -1;
        translate: 0 -50%;
        scale: -1 1;
        width: 50%;
        height: 100%;
        max-height: 650px;
        display: flex;
        flex-direction: column;
        justify-content: start;

        @include breakpoint(500) {
            translate: 0 -50%;
            scale: 1 1;
            justify-content: center;
        }
    }

    .hero__bg--animation-container {
        // outline: 2px solid blue;
        position: relative;
        width: 100%;
        height: 70%;
    }
    .hero__image {
        position: absolute;
        height: auto;
    }

    .hero__rocket {
        width: 55vw;
        max-width: 400px;
        bottom: 50%;
        translate: 0 50%;
        rotate: -10deg;

        @include breakpoint(500) {
            bottom: 50%;
            rotate: 0deg;
        }
    }

    .hero__cloud {
        // outline: 2px solid rgb(115, 128, 0);

        top: 90%;
        left: clamp-calc(-120px, -90px, 700, 1000);
        translate: 0 -60%;
        width: 200px;
        @include breakpoint(500) {
            top: 100%;
        }
    }

    .hero__cloud--2 {
        // outline: 2px solid purple;
        width: 30%;
        width: 150px;

        scale: -1 1;
        left: 8%;

        @include breakpoint(500) {
            width: 250px;
        }
    }
</style>

<script>
    import { gsap } from "gsap";

    const tl = gsap.timeline();
    tl.from(".letter--learning", {
        opacity: 0,
        yPercent: 30,
        stagger: 0.1,
        duration: 0.6,
        ease: "power3.out",
    }).from(
        ".hero__cta a",
        {
            autoAlpha: 0,
            xPercent: -10,
        },
        ">-0.3",
    );

    // const bgTl = gsap.timeline({});
</script>
