---
import type { HTMLAttributes } from "astro/types";
import type { LinkProps } from "@components/Link.astro";
import Link from "@components/Link.astro";
type BaseProps = {
    iconBgColor?: "grey" | "red" | "green" | "blue" | "yellow" | "orange" | "purple" | "pink";
    link?: true;
};
type NonLinkCard = BaseProps &
    HTMLAttributes<"article"> & {
        href?: never; // Explicitly prevent href
    };

type LinkCard = BaseProps &
    LinkProps & {
        link: true;
    };
type Props = NonLinkCard | LinkCard;

const { iconBgColor, link, class: className, ...rest } = Astro.props;
---

{
    link ? (
        <Link class:list={["card", "card--link", className]} {...rest}>
            {
                // ICON
                Astro.slots.has("icon") && (
                    <div class:list={["card__icon", `card__icon--${iconBgColor}`]}>
                        <slot name="icon" />
                    </div>
                )
            }
            {(Astro.slots.has("title") || Astro.slots.has("text")) && (
                <div class="card__text">
                    <span class="card__title">
                        <slot name="title" />
                    </span>
                    <span class="card__description">
                        <slot name="text" />
                    </span>
                </div>
            )}
        </Link>
    ) : (
        <article class:list={["card", className]} {...rest}>
            {
                // ICON
                Astro.slots.has("icon") && (
                    <div class:list={["card__icon", `card__icon--${iconBgColor}`]}>
                        <slot name="icon" />
                    </div>
                )
            }
            {(Astro.slots.has("title") || Astro.slots.has("text")) && (
                <div class="card__text">
                    <span class="card__title">
                        <slot name="title" />
                    </span>
                    <span class="card__description">
                        <slot name="text" />
                    </span>
                </div>
            )}
        </article>
    )
}

<style lang="scss">
    @use "../styles/abstracts" as *;
    .card {
        --_card-bg-color: var(--clr-zinc-900);
        background-color: var(--_card-bg-color);
        border-radius: var(--bdr-radius);
        padding: #{rem(8)};
        display: flex;
        align-items: center;
        gap: #{rem(24)};
        gap: #{clamp-calc(16, 24, 600, 1000)};
        height: 100%;
    }

    // LINK MODIFIER: add hover and focus styles
    .card--link {
        // transition init
        transition: background-color 0.2s ease-out;

        .card__icon::before {
            transition: opacity 0.2s ease-out;
        }

        // hover and focus visibile
        &:hover,
        &:focus-visible {
            --_card-bg-color: var(--clr-zinc-800);

            .card__icon::before {
                opacity: 0.8;
            }
        }
    }

    .card__icon {
        --_icon-bg-color: transparent;
        display: grid;
        place-items: center;
        width: fit-content;
        padding: #{rem(12)};
        border-radius: var(--bdr-radius);
        position: relative;
        isolation: isolate;

        &::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
            width: 100%;
            height: 100%;
            border-radius: var(--bdr-radius);
            background-color: var(--_icon-bg-color);
            opacity: 0.7;
        }
    }

    // ICON BG MODIFIERS
    .card__icon--grey {
        --_icon-bg-color: var(--clr-gray-700);
    }
    .card__icon--red {
        --_icon-bg-color: var(--clr-red-800);
    }
    .card__icon--green {
        --_icon-bg-color: var(--clr-green-500);
    }
    .card__icon--blue {
        --_icon-bg-color: var(--clr-blue-500);
    }
    .card__icon--yellow {
        --_icon-bg-color: var(--clr-yellow-700);
    }
    .card__icon--orange {
        --_icon-bg-color: var(--clr-orange-700);
    }
    .card__icon--purple {
        --_icon-bg-color: var(--clr-purple-500);
    }
    .card__icon--pink {
        --_icon-bg-color: var(--clr-pink-500);
    }

    // TEXT
    .card__text {
        display: grid;
        gap: #{rem(4)};
    }
    .card__title:global(> *) {
        font-size: var(--fs-fluid-h6);
    }
</style>
